{% extends 'base.html.twig' %}

{% block title %}Les chambres{% endblock %}

{% block body %}
    {% include 'reuse/hero.html.twig' %}
    <div class="flex justify-around p-5 gap-10">
        <div class="w-[30%]">
            {% include 'reuse/dashboard-admin.html.twig' %}
        </div>
        <div class="w-[70%] mx-auto p-2">
            <div class="w-[100%] flex justify-end" onClick="ajouterData()">
                <span class="p-1.5 bg-slate-900 text-white font-bold rounded text-sm cursor-pointer">Créer une chambre</span>
            </div> 
            <h1 class="font-bold text-2xl mb-3.5 underline">Les chambres</h1>
            <div class="flex flex-col mb-2">
                <label for='filterName' class="underline mb-1 text-bleuLune font-bold">Trier par libellé :</label>
                <input type='text' oninput="filterName()" class="border border-bleuGlace p-0.5 w-[20vw] rounded focus:outline-none focus:ring-2 focus:ring-bleuClair" id='filterName'/>
            </div>
            <div class="grid-cols-4 grid-rows-4 grid gap-7 overflow-hidden"  id="chambreContainer">
                {% if chambres is not empty %}
                    {% include 'chambre/_chambre_cards.html.twig' %}
                {% else %}
                    <span>Aucune chambre trouvé</span>
                {% endif %}
            </div>
        </div>
    </div>
    {% include 'reuse/display/addDisplay.html.twig' %}
    {% include 'reuse/display/updateDisplay.html.twig' %}

    <script>
        function filterName() {
            const container = document.getElementById("chambreContainer");
            const libelle = document.getElementById("filterName").value;
            const url = "{{ path('app_chambre_filter_name') }}?libelle=" + encodeURIComponent(libelle);

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        container.innerHTML = "<p class='text-red-500 text-sm'>Aucune chambre trouvé.</p>";
                        return;
                    }
                    container.innerHTML = data.html;
                })
                .catch(error => {
                    console.error(error);
                    container.innerHTML = "<p class='text-red-500 text-sm'>Erreur lors du chargement.</p>";
                });
        }
    </script>
{% endblock %}
