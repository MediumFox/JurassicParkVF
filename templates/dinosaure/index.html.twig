{% extends 'base.html.twig' %}

{% block title %}Les dinosaures{% endblock %}

{% block body %}
    {% include 'reuse/hero.html.twig' %}
    <div class="flex justify-around p-5 gap-10">
        <div class="w-[30%]">
            {% include 'reuse/dashboard-admin.html.twig' %}
        </div>
        <div class="w-[70%] mx-auto p-2">
            <div class="w-[100%] flex justify-end" onClick="ajouterData()">
                <span class="p-1.5 bg-slate-900 text-white font-bold rounded text-sm cursor-pointer">Créer un dinosaure</span>
            </div> 
            <h1 class="font-bold text-2xl mb-3.5 underline">Les dinosaures</h1>
            <div class="flex gap-4 mt-4 mb-4">
                <button onclick="telechargerJson()" class="bg-slate-900 text-white px-1 py-0 rounded cursor-pointer">
                    Télécharger JSON
                </button>
                <button onclick="telechargerXml()" class="bg-slate-900 text-white px-3 py-2 rounded cursor-pointer">
                    Télécharger XML
                </button>
            </div>
            <div class="flex justify-between items-center w-full  mb-10">
                <div class="flex flex-col ">
                    <label for='filterName' class="underline mb-1 text-bleuLune font-bold">Trier par libellé :</label>
                    <input type='text' oninput="filterName()" class="border border-bleuGlace p-0.5 w-[20vw] rounded focus:outline-none focus:ring-2 focus:ring-bleuClair" id='filterName'/>
                </div>

                <div class="flex items-end justify-end gap-5">
                    <div class="flex flex-col justify-end ">
                        <label for='selectRegime' class="underline mb-1 text-bleuLune font-bold">Trier par Régime :</label>
                        <select id='selectRegime' class="border border-bleuGlace p-1 rounded w-[20vw] focus:outline-none focus:ring-2 focus:ring-bleuClair" onChange="filterName()">
                            <option value="">Tous</option>
                            <option value="Carnivore">Carnivore</option>
                            <option value="Omnivore">Omnivore</option>
                            <option value="Herbivore">Herbivore</option>
                        </select>
                    </div>
                    <div class="flex flex-col justify-end ">
                        <label for='selectEre' class="underline mb-1 text-bleuLune font-bold">Trier par Ere :</label>
                        <select id='selectEre' class="border border-bleuGlace p-1 rounded w-[20vw] focus:outline-none focus:ring-2 focus:ring-bleuClair" onChange="filterName()">
                            <option value="">Tous</option>
                            <option value="Neogene">Neogene</option>
                            <option value="Paleogene">Paleogene</option>
                            <option value="Cretace">Cretace</option>
                            <option value="Jurassique">Jurassique</option>
                            <option value="Trias">Trias</option>
                            <option value="Permien">Permien</option>
                            <option value="Carbonifère">Carbonifère</option>
                            <option value="Devonien">Devonien</option>
                            <option value="Silurien">Silurien</option>
                            <option value="Ordovicien">Ordovicien</option>
                            <option value="Cambrien">Cambrien</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="grid-cols-4 grid-rows-4 grid gap-7 overflow-hidden" id="dinosaureContainer">
                {% if dinosaures is not empty %}
                    {% include 'dinosaure/_dinosaure_cards.html.twig' %}
                {% else %}
                    <span>Aucun dinosaure trouvé</span>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% include 'reuse/display/addDisplay.html.twig' %}
{% include 'reuse/display/updateDisplay.html.twig' %}
{% include 'reuse/display/cloneDisplay.html.twig' %}

<script>
    function filterName() {
    const container = document.getElementById("dinosaureContainer");
    const libelle = document.getElementById("filterName").value;
    const regime = document.getElementById("selectRegime").value;
    const ere = document.getElementById("selectEre").value;
    const url = "{{ path('app_dinosaure_filter_name') }}?libelle=" + encodeURIComponent(libelle) + "&regime=" + encodeURIComponent(regime) + "&ere=" + encodeURIComponent(ere);

    fetch(url)
        .then(response => response.json())
        .then(data => {
            if (!data.success) {
                container.innerHTML = "<p class='text-red-500 text-sm'>Aucun dinosaure trouvé.</p>";
                return;
            }
            container.innerHTML = data.html;
        })
        .catch(error => {
            console.error(error);
            container.innerHTML = "<p class='text-red-500 text-sm'>Erreur lors du chargement.</p>";
        });
    }

    function telechargerJson() {
    fetch("{{ path('app_dinosaure_json') }}")
        .then(response => response.blob())
        .then(blob => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = "dinosaures.json";
            document.body.appendChild(a);
            a.click();
            a.remove();
            window.URL.revokeObjectURL(url);
        });
    }

    function telechargerXml() {
        fetch("{{ path('app_dinosaure_xml') }}")
            .then(response => response.blob())
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = "dinosaures.xml";
                document.body.appendChild(a);
                a.click();
                a.remove();
                window.URL.revokeObjectURL(url);
            });
    }
</script>
{% endblock %}
